#!/bin/bash

#seconds=180
#seconds=720
seconds=420
ttl=20

#for rate in 30 60 90 120 150 180 210 240 270 300 330 360 390 420 450 480 510
#for rate in 150 300 600 1200
for rate in 100 200 300 400 500 600 700 800 900 1000 1100 1200
do
		#bandwidth=$(echo $rate | awk '{print int(1.42857 * $1)}')
		#timeout $seconds zmap 8.144.0.0/14 --probe-ttl=$ttl -M udp -O csv -s 65535 -p 1-65534 --probe-args=hex:c80000000108ef751b897969b5180885fc1d15e30a71d70040550bb6939c655f9680cbef567eb3bbb1024a6de50cebbd383944acee563ec018b8a830f03c8261495f1536ab2f6ca6378c0eef6766f5b7ed1ca408b001f3604e7ee398f57541ea908ae8534ae11060bad540b8807a8a -B "$bandwidth"M
		#
		bandwidth=$(echo $rate | awk '{print int(2.666 * $1)}')
		timeout $seconds zmap 8.144.0.0/14 --probe-ttl=$ttl -M udp -O csv -s 65535 -p 1-65534 --probe-args=hex:c500000001108144962187fccea82488d99a65bb901e107bcbc370f1173b1983705b16cb2417d70040e1ed2f311bcfba704fe886c7c9c1332fb7a803cec479e5be90a2178c3cbef7de2cee8d67775520c938e2cd048830858fa9b5bdae17332de69ab5a23aa355b19f5066e593d38e13fb5cc6304a2439f671f61585fe8c4f4646f41c5b0b1a9867bbc77d7cbb55fba3404a56fef53d7e4fc55effca07fe3a040c6c3652c198edab6d37ecc099f433e79b8bd538bf6074f405f0565a71149f4713be781ca076fbef560408e7857c02efbb1b79321b81467db45e0ae04e9ed04e269d7f6781ceb0661927234be9ada7853dde9299a4ebf790ffa3c8c5f4cbb8a515222199d66fd6699c76ef -B "$bandwidth"M
		sleep 180

done

